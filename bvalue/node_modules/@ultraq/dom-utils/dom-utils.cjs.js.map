{"version":3,"sources":["dom-utils.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;AASO,SAAS,gBAAT,CAA0B,OAA1B,EAAmC,SAAnC,EAA8C,QAA9C,EAAwD,OAAxD,EAAiE;AACvE,EAAA,OAAO,CAAC,gBAAR,CAAyB,SAAzB,EAAoC,UAAA,KAAK,EAAI;AAC5C,QAAI,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,QAArB,CAAJ,EAAoC;AACnC,MAAA,OAAO,CAAC,KAAD,CAAP;AACA;AACD,GAJD;AAKA;AAED;;;;;;;AAKO,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AACtC,SAAO,OAAO,CAAC,UAAf,EAA2B;AAC1B,IAAA,OAAO,CAAC,WAAR,CAAoB,OAAO,CAAC,UAA5B;AACA;AACD;AAED;;;;;;;;AAMO,SAAS,WAAT,CAAqB,UAArB,EAAiC;AACvC,SAAO,IAAI,SAAJ,GAAgB,eAAhB,CAAgC,UAAhC,EAA4C,WAA5C,CAAP;AACA;AAED;;;;;;;;;;;;;;AAYO,SAAS,oBAAT,CAA8B,QAA9B,EAA0D;AAAA;;AAAA,MAAlB,KAAkB,uEAAV,QAAU;AAChE,SAAO,IAAI,CAAC,KAAL,CAAY,yBAAA,KAAK,CAAC,aAAN,CAAoB,QAApB,wGAA+B,WAA/B,gFAA4C,IAA5C,OAAsD,IAAlE,CAAP;AACA;AAED;;;;;;;;AAMO,SAAS,SAAT,CAAmB,kBAAnB,EAAuC;AAC7C,MAAI,kBAAkB,CAAC,QAAnB,KAAgC,IAAI,CAAC,aAAzC,EAAwD;AACvD,QAAI,MAAM,GAAG,EAAb;AADuD,QAElD,WAFkD,GAEP,kBAFO,CAElD,WAFkD;AAAA,QAErC,OAFqC,GAEP,kBAFO,CAErC,OAFqC;AAAA,QAE5B,iBAF4B,GAEP,kBAFO,CAE5B,iBAF4B;;AAGvD,QAAI,OAAJ,EAAa;AACZ,MAAA,MAAM,wBAAiB,OAAO,CAAC,IAAzB,MAAN;AACA,KAFD,MAGK,IAAI,iBAAiB,CAAC,OAAlB,KAA8B,MAA9B,IAAwC,WAAW,KAAK,WAA5D,EAAyE;AAC7E,MAAA,MAAM,qBAAN;AACA;;AACD,IAAA,MAAM,IAAI,iBAAiB,CAAC,SAA5B;AACA,WAAO,MAAP;AACA;;AACD,SAAO,kBAAkB,CAAC,SAA1B;AACA","file":"dom-utils.cjs.js","sourcesContent":["/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Add an event listener to `element` that only fires when the target of the\n * event matches `selector`.\n * \n * @param {Element} element\n * @param {String} eventName\n * @param {String} selector\n * @param {Function} handler\n */\nexport function addEventDelegate(element, eventName, selector, handler) {\n\telement.addEventListener(eventName, event => {\n\t\tif (event.target.matches(selector)) {\n\t\t\thandler(event);\n\t\t}\n\t});\n}\n\n/**\n * Removes all of an element's child nodes.\n * \n * @param {Element} element\n */\nexport function clearChildren(element) {\n\twhile (element.firstChild) {\n\t\telement.removeChild(element.firstChild);\n\t}\n}\n\n/**\n * Deserialize an HTML string into a document fragment.\n * \n * @param {String} htmlString\n * @return {Document}\n */\nexport function deserialize(htmlString) {\n\treturn new DOMParser().parseFromString(htmlString, 'text/html');\n}\n\n/**\n * Parse the text content of the element picked out by the given selector as\n * JSON data, returning it as an object.\n * \n * @param {String} selector\n *   A CSS selector for picking out the HTML element that contains the JSON data\n *   to load.\n * @param {Document} [scope=document]\n *   The DOM tree to run the selector over.\n * @return {Object}\n *   The JSON data converted to an object, or `null` if no data could be read.\n */\nexport function parseJsonFromElement(selector, scope = document) {\n\treturn JSON.parse((scope.querySelector(selector)?.textContent?.trim() || null));\n}\n\n/**\n * Serialize a document or document fragment into an HTML string.\n * \n * @param {Document|DocumentFragment} documentOrFragment\n * @return {String}\n */\nexport function serialize(documentOrFragment) {\n\tif (documentOrFragment.nodeType === Node.DOCUMENT_NODE) {\n\t\tlet result = '';\n\t\tlet {contentType, docType, firstElementChild} = documentOrFragment;\n\t\tif (docType) {\n\t\t\tresult += `<!DOCTYPE ${docType.name}>`;\n\t\t}\n\t\telse if (firstElementChild.tagName === 'HTML' || contentType === 'text/html') {\n\t\t\tresult += `<!DOCTYPE html>`;\n\t\t}\n\t\tresult += firstElementChild.outerHTML;\n\t\treturn result;\n\t}\n\treturn documentOrFragment.outerHTML;\n}\n"]}